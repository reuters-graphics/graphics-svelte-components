---
title: Ai2svelte
description: A shortcut for ai2svelte graphics.
slug: ai2svelte
---

<script>
  import DemoContainer from '../_docs/DemoContainer/index.svelte';
  import Ai2svelte from './index.svelte';
  import AiChart from './ai2html/ai-chart.exclude.svelte';

  const fetchComponent = async(componentName) => {
    return (await import(`./ai2html/${componentName}.exclude.svelte`)).default
  };
</script>

<section>

## {title}

Pass a component created by [ai2svelte](https://github.com/reuters-graphics/ai2svelte) to this component, which will wrap it in a graphics section tag.

</section>

```svelte
<script>
  import { Ai2svelte } from '@reuters-graphics/graphics-svelte-components';
  import MyAiChart from './some-chart.svelte';
</script>

<Ai2svelte AiGraphic="{MyAiChart}" />
```

<DemoContainer>
  <Ai2svelte AiGraphic={AiChart} />
</DemoContainer>

<section>

Adjust the size of the graphic by passing a class name corresponding to one of our well widths: `wide`, `wider`, `widest` or `fluid`.

</section>

```svelte
<script>
  import { Ai2svelte } from '@reuters-graphics/graphics-svelte-components';
  import MyAiChart from './some-chart.svelte';
</script>

<Ai2svelte AiGraphic="{MyAiChart}" size="wide" />
```

<DemoContainer>
  <Ai2svelte AiGraphic={AiChart} size='wide' />
</DemoContainer>

<section>

Add additional chart chatter through slots.

</section>

```svelte
<script>
  import { Ai2svelte } from '@reuters-graphics/graphics-svelte-components';
  import MyAiChart from './some-chart.svelte';
</script>

<!-- Add an ID and change the default width of your graphic -->
<Ai2svelte AiGraphic="{MyAiChart}" id="ai-map">
  <!-- Add a title and/or notes with slots -->
  <div slot="title" class="title">
    <h4>Earthquake in Haiti</h4>
    <p>A 7.0 magnitude earthquake struck the island on Tuesday.</p>
  </div>
  <aside slot="notes">
    <p class="note">Note: Data current as of Wednesday.</p>
    <p class="source">Source: USGIS</p>
  </aside>
</Ai2svelte>

<style lang="scss">
  // You can now style those elements!
  h4 {
    color: darkred;
  }
</style>
```

<DemoContainer>
  <Ai2svelte AiGraphic="{AiChart}" id="ai-map">
    <!-- Add a title and/or notes with slots -->
    <div slot="title" class="title">
      <h4>Earthquake in Haiti</h4>
      <p>A 7.0 magnitude earthquake struck the island on Tuesday.</p>
    </div>
    <aside slot="notes">
      <p class="note">Note: Data current as of Wednesday.</p>
      <p class="source">Source: USGIS</p>
    </aside>
  </Ai2svelte>
</DemoContainer>

<style>
  div.title h4 {
    color: darkred;
  }
</style>

<section>

You can use this component to layout AI graphics via an [ArchieML](http://archieml.org/)-formatted Google doc by using the following pattern to dynamically import an ai2svelte component:

</section>

```bash
# In your Google doc...
[blocks]

# ...
Type: ai2svelte
ComponentName: my-chart

[]
```

```svelte
<!-- src/lib/Page.svelte -->
<script>
  import content from '$locales/en/content.json';
  import { Ai2svelte } from '@reuters-graphics/graphics-svelte-components';

  const fetchComponent = async (componentName) => {
    return (await import(`./ai2html/${componentName}.svelte`)).default;
  };
</script>

{#each content.blocks as block}
  {#if block.Type === 'ai2svelte'}
    {#await fetchComponent(block.ComponentName)}
      <div></div>
    {:then component}
      <Ai2svelte AiGraphic="{component}" />
    {:catch error}
      {console.error(
        `Error fetching component: ./ai2html/${block.ComponentName}.svelte`,
        error
      )}
    {/await}
  {/if}
{/each}
```

<section>

This comes with some restrictions, though. Be sure your `fetchComponent` function follows [the limits on dynamic imports](https://github.com/rollup/plugins/tree/master/packages/dynamic-import-vars#limitations).

</section>

<DemoContainer>
  {#await fetchComponent('ai-chart') then component}
    <Ai2svelte AiGraphic="{component}" />
  {/await}
</DemoContainer>
